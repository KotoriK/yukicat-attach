{"version":3,"file":"720.js","mappings":"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","sources":["webpack://yukicat-attach/./node_modules/.pnpm/@floating-ui+utils@0.2.7/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack://yukicat-attach/./node_modules/.pnpm/@floating-ui+core@1.6.7/node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack://yukicat-attach/./node_modules/.pnpm/@floating-ui+utils@0.2.7/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","webpack://yukicat-attach/./node_modules/.pnpm/@floating-ui+dom@1.6.10/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack://yukicat-attach/./node_modules/.pnpm/solid-js@1.8.22/node_modules/solid-js/dist/solid.js","webpack://yukicat-attach/./node_modules/.pnpm/solid-js@1.8.22/node_modules/solid-js/web/dist/web.js"],"sourcesContent":["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","let taskIdCounter = 1,\n  isCallbackScheduled = false,\n  isPerformingWork = false,\n  taskQueue = [],\n  currentTask = null,\n  shouldYieldToHost = null,\n  yieldInterval = 5,\n  deadline = 0,\n  maxYieldInterval = 300,\n  scheduleCallback = null,\n  scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n    port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = n + m >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n    timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {\n  context: undefined,\n  registry: undefined,\n  effects: undefined,\n  done: false,\n  getContextId() {\n    return getContextId(this.context.count);\n  },\n  getNextContextId() {\n    return getContextId(this.context.count++);\n  }\n};\nfunction getContextId(count) {\n  const num = String(count),\n    len = num.length - 1;\n  return sharedConfig.context.id + (len ? String.fromCharCode(96 + len) : \"\") + num;\n}\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return {\n    ...sharedConfig.context,\n    id: sharedConfig.getNextContextId(),\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceConfig = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n    owner = Owner,\n    unowned = fn.length === 0,\n    current = detachedOwner === undefined ? owner : detachedOwner,\n    root = unowned ? UNOWNED : {\n      owned: null,\n      cleanups: null,\n      context: current ? current.context : null,\n      owner: current\n    },\n    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);else value = value(s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  if (!options || !options.render) c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(() => {\n      fn ? fn() : untrack(onInvalidate);\n      fn = undefined;\n    }, undefined, false, 0),\n    s = SuspenseContext && useContext(SuspenseContext);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction isPromise(v) {\n  return v && typeof v === \"object\" && \"then\" in v;\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (arguments.length === 2 && typeof pFetcher === \"object\" || arguments.length === 1) {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  } else {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  }\n  let pr = null,\n    initP = NO_INIT,\n    id = null,\n    loadedUnderTransition = false,\n    scheduled = false,\n    resolved = (\"initialValue\" in options),\n    dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = new Set(),\n    [value, setValue] = (options.storage || createSignal)(options.initialValue),\n    [error, setError] = createSignal(undefined),\n    [track, trigger] = createSignal(undefined, {\n      equals: false\n    }),\n    [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = sharedConfig.getNextContextId();\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;else if (sharedConfig.load && sharedConfig.has(id)) initP = sharedConfig.load(id);\n  }\n  function loadEnd(p, v, error, key) {\n    if (pr === p) {\n      pr = null;\n      key !== undefined && (resolved = true);\n      if ((p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\n        value: v\n      }));\n      initP = NO_INIT;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          completeLoad(v, error);\n        }, false);\n      } else completeLoad(v, error);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (err === undefined) setValue(() => v);\n      setState(err !== undefined ? \"errored\" : resolved ? \"ready\" : \"unresolved\");\n      setError(err);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c = SuspenseContext && useContext(SuspenseContext),\n      v = value(),\n      err = error();\n    if (err !== undefined && !pr) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled) return;\n    scheduled = false;\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP !== NO_INIT ? initP : untrack(() => fetcher(lookup, {\n      value: value(),\n      refetching\n    }));\n    if (!isPromise(p)) {\n      loadEnd(pr, p, undefined, lookup);\n      return p;\n    }\n    pr = p;\n    if (\"value\" in p) {\n      if (p.status === \"success\") loadEnd(pr, p.value, undefined, lookup);else loadEnd(pr, undefined, castError(p.value), lookup);\n      return p;\n    }\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, undefined, castError(e), lookup));\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s = state();\n        return s === \"pending\" || s === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        const err = error();\n        if (err && !pr) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));else load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction createDeferred(source, options) {\n  let t,\n    timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  const [deferred, setDeferred] = createSignal(Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, options);\n  updateComputation(node);\n  setDeferred(() => Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const [key, val] of subs.entries()) if (fn(key, v) !== fn(key, p)) {\n      for (const c of val.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true, STALE);\n  updateComputation(node);\n  return key => {\n    const listener = Listener;\n    if (listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  };\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  if (!ExternalSourceConfig && Listener === null) return fn();\n  const listener = Listener;\n  Listener = null;\n  try {\n    if (ExternalSourceConfig) return ExternalSourceConfig.untrack(fn);\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return prevValue;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction catchError(fn, handler) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  Owner = createComputation(undefined, undefined, true);\n  Owner.context = {\n    ...Owner.context,\n    [ERROR]: [handler]\n  };\n  if (Transition && Transition.running) Transition.sources.add(Owner);\n  try {\n    return fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = Owner.owner;\n  }\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  const prevListener = Listener;\n  Owner = o;\n  Listener = null;\n  try {\n    return runUpdates(fn, true);\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = prev;\n    Listener = prevListener;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t = Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        queue: new Set(),\n        running: true\n      });\n      t.done || (t.done = new Promise(res => t.resolve = res));\n      t.running = true;\n    }\n    runUpdates(fn, false);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let value;\n  return Owner && Owner.context && (value = Owner.context[context.id]) !== undefined ? value : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children()));\n  memo.toArray = () => {\n    const c = memo();\n    return Array.isArray(c) ? c : c != null ? [c] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext());\n}\nfunction enableExternalSource(factory, untrack = fn => fn()) {\n  if (ExternalSourceConfig) {\n    const {\n      factory: oldFactory,\n      untrack: oldUntrack\n    } = ExternalSourceConfig;\n    ExternalSourceConfig = {\n      factory: (fn, trigger) => {\n        const oldSource = oldFactory(fn, trigger);\n        const source = factory(x => oldSource.track(x), trigger);\n        return {\n          track: x => source.track(x),\n          dispose() {\n            source.dispose();\n            oldSource.dispose();\n          }\n        };\n      },\n      untrack: fn => oldUntrack(() => untrack(fn))\n    };\n  } else {\n    ExternalSourceConfig = {\n      factory,\n      untrack\n    };\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (runningTransition ? this.tState : this.state)) {\n    if ((runningTransition ? this.tState : this.state) === STALE) updateComputation(this);else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current = Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    if (Transition) {\n      const TransitionRunning = Transition.running;\n      if (TransitionRunning || !isComp && Transition.sources.has(node)) {\n        Transition.sources.add(node);\n        node.tValue = value;\n      }\n      if (!TransitionRunning) node.value = value;\n    } else node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i = 0; i < node.observers.length; i += 1) {\n          const o = node.observers[i];\n          const TransitionRunning = Transition && Transition.running;\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\n          if (TransitionRunning ? !o.tState : !o.state) {\n            if (o.pure) Updates.push(o);else Effects.push(o);\n            if (o.observers) markDownstream(o);\n          }\n          if (!TransitionRunning) o.state = STALE;else o.tState = STALE;\n        }\n        if (Updates.length > 10e5) {\n          Updates = [];\n          if (false) ;\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const time = ExecCount;\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        Listener = Owner = node;\n        runComputation(node, node.tValue, time);\n        Listener = Owner = null;\n      }, false);\n    });\n  }\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  const owner = Owner,\n    listener = Listener;\n  Listener = Owner = node;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      if (Transition && Transition.running) {\n        node.tState = STALE;\n        node.tOwned && node.tOwned.forEach(cleanNode);\n        node.tOwned = undefined;\n      } else {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    node.updatedAt = time + 1;\n    return handleError(err);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: Owner ? Owner.context : null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceConfig && c.fn) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceConfig.factory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceConfig.factory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if ((runningTransition ? node.tState : node.state) === 0) return;\n  if ((runningTransition ? node.tState : node.state) === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (runningTransition ? node.tState : node.state) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n        prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if ((runningTransition ? node.tState : node.state) === STALE) {\n      updateComputation(node);\n    } else if ((runningTransition ? node.tState : node.state) === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!wait) Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition) {\n    if (!Transition.promises.size && !Transition.queue.size) {\n      const sources = Transition.sources;\n      const disposed = Transition.disposed;\n      Effects.push.apply(Effects, Transition.effects);\n      res = Transition.resolve;\n      for (const e of Effects) {\n        \"tState\" in e && (e.state = e.tState);\n        delete e.tState;\n      }\n      Transition = null;\n      runUpdates(() => {\n        for (const d of disposed) cleanNode(d);\n        for (const v of sources) {\n          v.value = v.tValue;\n          if (v.owned) {\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n          }\n          if (v.tOwned) v.owned = v.tOwned;\n          delete v.tValue;\n          delete v.tOwned;\n          v.tState = 0;\n        }\n        setTransPending(false);\n      }, false);\n    } else if (Transition.running) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n  }\n  const e = Effects;\n  Effects = null;\n  if (e.length) runUpdates(() => runEffects(e), false);\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n    userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) {\n    if (sharedConfig.count) {\n      sharedConfig.effects || (sharedConfig.effects = []);\n      sharedConfig.effects.push(...queue.slice(0, userLength));\n      return;\n    }\n    setHydrateContext();\n  }\n  if (sharedConfig.effects && (sharedConfig.done || !sharedConfig.count)) {\n    queue = [...sharedConfig.effects, ...queue];\n    userLength += sharedConfig.effects.length;\n    delete sharedConfig.effects;\n  }\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      const state = runningTransition ? source.tState : source.state;\n      if (state === STALE) {\n        if (source !== ignore && (!source.updatedAt || source.updatedAt < ExecCount)) runTop(source);\n      } else if (state === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (runningTransition ? !o.tState : !o.state) {\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\n      if (o.pure) Updates.push(o);else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n        index = node.sourceSlots.pop(),\n        obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n          s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = node.tOwned.length - 1; i >= 0; i--) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = node.owned.length - 1; i >= 0; i--) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = node.cleanups.length - 1; i >= 0; i--) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction castError(err) {\n  if (err instanceof Error) return err;\n  return new Error(typeof err === \"string\" ? err : \"Unknown error\", {\n    cause: err\n  });\n}\nfunction runErrors(err, fns, owner) {\n  try {\n    for (const f of fns) f(err);\n  } catch (e) {\n    handleError(e, owner && owner.owner || null);\n  }\n}\nfunction handleError(err, owner = Owner) {\n  const fns = ERROR && owner && owner.context && owner.context[ERROR];\n  const error = castError(err);\n  if (!fns) throw error;\n  if (Effects) Effects.push({\n    fn() {\n      runErrors(error, fns, owner);\n    },\n    state: STALE\n  });else runErrors(error, fns, owner);\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(() => res = untrack(() => {\n      Owner.context = {\n        ...Owner.context,\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }), undefined);\n    return res;\n  };\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null || !Owner.context[ERROR]) {\n    Owner.context = {\n      ...Owner.context,\n      [ERROR]: [fn]\n    };\n    mutateContext(Owner, ERROR, [fn]);\n  } else Owner.context[ERROR].push(fn);\n}\nfunction mutateContext(o, key, value) {\n  if (o.owned) {\n    for (let i = 0; i < o.owned.length; i++) {\n      if (o.owned[i].context === o.context) mutateContext(o.owned[i], key, value);\n      if (!o.owned[i].context) {\n        o.owned[i].context = o.context;\n        mutateContext(o.owned[i], key, value);\n      } else if (!o.owned[i].context[key]) {\n        o.owned[i].context[key] = value;\n        mutateContext(o.owned[i], key, value);\n      }\n    }\n  }\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler = typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createEffect(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    len = 0,\n    indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n      newLen = newItems.length,\n      i,\n      j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newIndices, newIndicesNext, temp, tempdisposers, tempIndexes, start, end, newEnd, item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    signals = [],\n    len = 0,\n    i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [],\n      newLen = newItems.length;\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newLen; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newLen;\n      items = newItems.slice(0);\n      return mapped = mapped.slice(0, len);\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY) return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction resolveSources() {\n  for (let i = 0, length = this.length; i < length; ++i) {\n    const v = this[i]();\n    if (v !== undefined) return v;\n  }\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    proxy = proxy || !!s && $PROXY in s;\n    sources[i] = typeof s === \"function\" ? (proxy = true, createMemo(s)) : s;\n  }\n  if (proxy) {\n    return new Proxy({\n      get(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          const v = resolveSource(sources[i])[property];\n          if (v !== undefined) return v;\n        }\n      },\n      has(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          if (property in resolveSource(sources[i])) return true;\n        }\n        return false;\n      },\n      keys() {\n        const keys = [];\n        for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\n        return [...new Set(keys)];\n      }\n    }, propTraps);\n  }\n  const sourcesMap = {};\n  const defined = Object.create(null);\n  for (let i = sources.length - 1; i >= 0; i--) {\n    const source = sources[i];\n    if (!source) continue;\n    const sourceKeys = Object.getOwnPropertyNames(source);\n    for (let i = sourceKeys.length - 1; i >= 0; i--) {\n      const key = sourceKeys[i];\n      if (key === \"__proto__\" || key === \"constructor\") continue;\n      const desc = Object.getOwnPropertyDescriptor(source, key);\n      if (!defined[key]) {\n        defined[key] = desc.get ? {\n          enumerable: true,\n          configurable: true,\n          get: resolveSources.bind(sourcesMap[key] = [desc.get.bind(source)])\n        } : desc.value !== undefined ? desc : undefined;\n      } else {\n        const sources = sourcesMap[key];\n        if (sources) {\n          if (desc.get) sources.push(desc.get.bind(source));else if (desc.value !== undefined) sources.push(() => desc.value);\n        }\n      }\n    }\n  }\n  const target = {};\n  const definedKeys = Object.keys(defined);\n  for (let i = definedKeys.length - 1; i >= 0; i--) {\n    const key = definedKeys[i],\n      desc = defined[key];\n    if (desc && desc.get) Object.defineProperty(target, key, desc);else target[key] = desc ? desc.value : undefined;\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  if ($PROXY in props) {\n    const blocked = new Set(keys.length > 1 ? keys.flat() : keys[0]);\n    const res = keys.map(k => {\n      return new Proxy({\n        get(property) {\n          return k.includes(property) ? props[property] : undefined;\n        },\n        has(property) {\n          return k.includes(property) && property in props;\n        },\n        keys() {\n          return k.filter(property => property in props);\n        }\n      }, propTraps);\n    });\n    res.push(new Proxy({\n      get(property) {\n        return blocked.has(property) ? undefined : props[property];\n      },\n      has(property) {\n        return blocked.has(property) ? false : property in props;\n      },\n      keys() {\n        return Object.keys(props).filter(k => !blocked.has(k));\n      }\n    }, propTraps));\n    return res;\n  }\n  const otherObject = {};\n  const objects = keys.map(() => ({}));\n  for (const propName of Object.getOwnPropertyNames(props)) {\n    const desc = Object.getOwnPropertyDescriptor(props, propName);\n    const isDefaultDesc = !desc.get && !desc.set && desc.enumerable && desc.writable && desc.configurable;\n    let blocked = false;\n    let objectIndex = 0;\n    for (const k of keys) {\n      if (k.includes(propName)) {\n        blocked = true;\n        isDefaultDesc ? objects[objectIndex][propName] = desc.value : Object.defineProperty(objects[objectIndex], propName, desc);\n      }\n      ++objectIndex;\n    }\n    if (!blocked) {\n      isDefaultDesc ? otherObject[propName] = desc.value : Object.defineProperty(otherObject, propName, desc);\n    }\n  }\n  return [...objects, otherObject];\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      sharedConfig.count || (sharedConfig.count = 0);\n      sharedConfig.count++;\n      (p || (p = fn())).then(mod => {\n        !sharedConfig.done && setHydrateContext(ctx);\n        sharedConfig.count--;\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) ? untrack(() => {\n      if (false) ;\n      if (!ctx || sharedConfig.done) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }) : \"\");\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? sharedConfig.getNextContextId() : `cl-${counter++}`;\n}\n\nconst narrowedError = name => `Stale read from <${name}>.`;\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Show(props) {\n  const keyed = props.keyed;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => keyed ? a === b : !a === !b\n  });\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      return fn ? untrack(() => child(keyed ? c : () => {\n        if (!untrack(condition)) throw narrowedError(\"Show\");\n        return props.when;\n      })) : child;\n    }\n    return props.fallback;\n  }, undefined, undefined);\n}\nfunction Switch(props) {\n  let keyed = false;\n  const equals = (a, b) => (keyed ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2];\n  const conditions = children(() => props.children),\n    evalConditions = createMemo(() => {\n      let conds = conditions();\n      if (!Array.isArray(conds)) conds = [conds];\n      for (let i = 0; i < conds.length; i++) {\n        const c = conds[i].when;\n        if (c) {\n          keyed = !!conds[i].keyed;\n          return [i, c, conds[i]];\n        }\n      }\n      return [-1];\n    }, undefined, {\n      equals\n    });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    const fn = typeof c === \"function\" && c.length > 0;\n    return fn ? untrack(() => c(keyed ? when : () => {\n      if (untrack(evalConditions)[0] !== index) throw narrowedError(\"Match\");\n      return cond.when;\n    })) : c;\n  }, undefined, undefined);\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn());\n}\nfunction ErrorBoundary(props) {\n  let err;\n  if (sharedConfig.context && sharedConfig.load) err = sharedConfig.load(sharedConfig.getContextId());\n  const [errored, setErrored] = createSignal(err, undefined);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(() => {\n    let e;\n    if (e = errored()) {\n      const f = props.fallback;\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\n    }\n    return catchError(() => props.children, setErrored);\n  }, undefined, undefined);\n}\n\nconst suspenseListEquals = (a, b) => a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst SuspenseListContext = /* #__PURE__ */createContext();\nfunction SuspenseList(props) {\n  let [wrapper, setWrapper] = createSignal(() => ({\n      inFallback: false\n    })),\n    show;\n  const listContext = useContext(SuspenseListContext);\n  const [registry, setRegistry] = createSignal([]);\n  if (listContext) {\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\n  }\n  const resolved = createMemo(prev => {\n    const reveal = props.revealOrder,\n      tail = props.tail,\n      {\n        showContent = true,\n        showFallback = true\n      } = show ? show() : {},\n      reg = registry(),\n      reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = reg.every(inFallback => !inFallback());\n      const res = reg.map(() => ({\n        showContent: all && showContent,\n        showFallback\n      }));\n      res.inFallback = !all;\n      return res;\n    }\n    let stop = false;\n    let inFallback = prev.inFallback;\n    const res = [];\n    for (let i = 0, len = reg.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n        s = reg[n]();\n      if (!stop && !s) {\n        res[n] = {\n          showContent,\n          showFallback\n        };\n      } else {\n        const next = !stop;\n        if (next) inFallback = true;\n        res[n] = {\n          showContent: next,\n          showFallback: !tail || next && tail === \"collapsed\" ? showFallback : false\n        };\n        stop = true;\n      }\n    }\n    if (!stop) inFallback = false;\n    res.inFallback = inFallback;\n    return res;\n  }, {\n    inFallback: false\n  });\n  setWrapper(() => resolved);\n  return createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        let index;\n        setRegistry(registry => {\n          index = registry.length;\n          return [...registry, inFallback];\n        });\n        return createMemo(() => resolved()[index], undefined, {\n          equals: suspenseListEquals\n        });\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction Suspense(props) {\n  let counter = 0,\n    show,\n    ctx,\n    p,\n    flicker,\n    error;\n  const [inFallback, setFallback] = createSignal(false),\n    SuspenseContext = getSuspenseContext(),\n    store = {\n      increment: () => {\n        if (++counter === 1) setFallback(true);\n      },\n      decrement: () => {\n        if (--counter === 0) setFallback(false);\n      },\n      inFallback,\n      effects: [],\n      resolved: false\n    },\n    owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.getContextId();\n    let ref = sharedConfig.load(key);\n    if (ref) {\n      if (typeof ref !== \"object\" || ref.status !== \"success\") p = ref;else sharedConfig.gather(key);\n    }\n    if (p && p !== \"$$f\") {\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(() => {\n        if (sharedConfig.done) return set();\n        sharedConfig.gather(key);\n        setHydrateContext(ctx);\n        set();\n        setHydrateContext();\n      }, err => {\n        error = err;\n        set();\n      });\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) show = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return flicker = undefined;\n        }\n        if (ctx && p === \"$$f\") setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(prev => {\n          const inFallback = store.inFallback(),\n            {\n              showContent = true,\n              showFallback = true\n            } = show ? show() : {};\n          if ((!inFallback || p && p !== \"$$f\") && showContent) {\n            store.resolved = true;\n            dispose && dispose();\n            dispose = ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!showFallback) return;\n          if (dispose) return prev;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"F\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nconst DEV = undefined;\n\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, catchError, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };\n","import { createRoot, createRenderEffect, untrack, sharedConfig, enableHydration, getOwner, createEffect, runWithOwner, createMemo, createSignal, onCleanup, splitProps } from 'solid-js';\nexport { ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, createComponent, createRenderEffect as effect, getOwner, createMemo as memo, mergeProps, untrack } from 'solid-js';\n\nconst booleans = [\"allowfullscreen\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"indeterminate\", \"inert\", \"ismap\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\"];\nconst Properties = /*#__PURE__*/new Set([\"className\", \"value\", \"readOnly\", \"formNoValidate\", \"isMap\", \"noModule\", \"playsInline\", ...booleans]);\nconst ChildProperties = /*#__PURE__*/new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = /*#__PURE__*/Object.assign(Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n});\nconst PropAliases = /*#__PURE__*/Object.assign(Object.create(null), {\n  class: \"className\",\n  formnovalidate: {\n    $: \"formNoValidate\",\n    BUTTON: 1,\n    INPUT: 1\n  },\n  ismap: {\n    $: \"isMap\",\n    IMG: 1\n  },\n  nomodule: {\n    $: \"noModule\",\n    SCRIPT: 1\n  },\n  playsinline: {\n    $: \"playsInline\",\n    VIDEO: 1\n  },\n  readonly: {\n    $: \"readOnly\",\n    INPUT: 1,\n    TEXTAREA: 1\n  }\n});\nfunction getPropAlias(prop, tagName) {\n  const a = PropAliases[prop];\n  return typeof a === \"object\" ? a[tagName] ? a[\"$\"] : undefined : a;\n}\nconst DelegatedEvents = /*#__PURE__*/new Set([\"beforeinput\", \"click\", \"dblclick\", \"contextmenu\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = /*#__PURE__*/new Set([\n\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animate\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"circle\", \"clipPath\", \"color-profile\", \"cursor\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feDropShadow\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"font\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignObject\", \"g\", \"glyph\", \"glyphRef\", \"hkern\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"missing-glyph\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\",\n\"set\", \"stop\",\n\"svg\", \"switch\", \"symbol\", \"text\", \"textPath\",\n\"tref\", \"tspan\", \"use\", \"view\", \"vkern\"]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nconst DOMElements = /*#__PURE__*/new Set([\"html\", \"base\", \"head\", \"link\", \"meta\", \"style\", \"title\", \"body\", \"address\", \"article\", \"aside\", \"footer\", \"header\", \"main\", \"nav\", \"section\", \"body\", \"blockquote\", \"dd\", \"div\", \"dl\", \"dt\", \"figcaption\", \"figure\", \"hr\", \"li\", \"ol\", \"p\", \"pre\", \"ul\", \"a\", \"abbr\", \"b\", \"bdi\", \"bdo\", \"br\", \"cite\", \"code\", \"data\", \"dfn\", \"em\", \"i\", \"kbd\", \"mark\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"small\", \"span\", \"strong\", \"sub\", \"sup\", \"time\", \"u\", \"var\", \"wbr\", \"area\", \"audio\", \"img\", \"map\", \"track\", \"video\", \"embed\", \"iframe\", \"object\", \"param\", \"picture\", \"portal\", \"source\", \"svg\", \"math\", \"canvas\", \"noscript\", \"script\", \"del\", \"ins\", \"caption\", \"col\", \"colgroup\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\", \"button\", \"datalist\", \"fieldset\", \"form\", \"input\", \"label\", \"legend\", \"meter\", \"optgroup\", \"option\", \"output\", \"progress\", \"select\", \"textarea\", \"details\", \"dialog\", \"menu\", \"summary\", \"details\", \"slot\", \"template\", \"acronym\", \"applet\", \"basefont\", \"bgsound\", \"big\", \"blink\", \"center\", \"content\", \"dir\", \"font\", \"frame\", \"frameset\", \"hgroup\", \"image\", \"keygen\", \"marquee\", \"menuitem\", \"nobr\", \"noembed\", \"noframes\", \"plaintext\", \"rb\", \"rtc\", \"shadow\", \"spacer\", \"strike\", \"tt\", \"xmp\", \"a\", \"abbr\", \"acronym\", \"address\", \"applet\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"basefont\", \"bdi\", \"bdo\", \"bgsound\", \"big\", \"blink\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"center\", \"cite\", \"code\", \"col\", \"colgroup\", \"content\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"dialog\", \"dir\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"font\", \"footer\", \"form\", \"frame\", \"frameset\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"image\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"marquee\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"nobr\", \"noembed\", \"noframes\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\", \"plaintext\", \"portal\", \"pre\", \"progress\", \"q\", \"rb\", \"rp\", \"rt\", \"rtc\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"shadow\", \"slot\", \"small\", \"source\", \"spacer\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"tt\", \"u\", \"ul\", \"var\", \"video\", \"wbr\", \"xmp\", \"input\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]);\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n    aEnd = a.length,\n    bEnd = bLength,\n    aStart = 0,\n    bStart = 0,\n    after = a[aEnd - 1].nextSibling,\n    map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) a[aStart].remove();\n        aStart++;\n      }\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n            sequence = 1,\n            t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else a[aStart++].remove();\n    }\n  }\n}\n\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init, options = {}) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    element === document ? code() : insert(element, code(), element.firstChild ? null : undefined, init);\n  }, options.owner);\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, isCE, isSVG) {\n  let node;\n  const create = () => {\n    const t = document.createElement(\"template\");\n    t.innerHTML = html;\n    return isSVG ? t.content.firstChild.firstChild : t.content.firstChild;\n  };\n  const fn = isCE ? () => untrack(() => document.importNode(node || (node = create()), true)) : () => (node || (node = create())).cloneNode(true);\n  fn.cloneNode = fn;\n  return fn;\n}\nfunction delegateEvents(eventNames, document = window.document) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents(document = window.document) {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setProperty(node, name, value) {\n  if (isHydrating(node)) return;\n  node[name] = value;\n}\nfunction setAttribute(node, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttributeNS(namespace, name);else node.setAttributeNS(namespace, name, value);\n}\nfunction className(node, value) {\n  if (isHydrating(node)) return;\n  if (value == null) node.removeAttribute(\"class\");else node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, handler[0] = e => handlerFn.call(node, handler[1], e));\n  } else node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}),\n    prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || value[key]) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n      classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev) {\n  if (!value) return prev ? setAttribute(node, \"style\") : value;\n  const nodeStyle = node.style;\n  if (typeof value === \"string\") return nodeStyle.cssText = value;\n  typeof prev === \"string\" && (nodeStyle.cssText = prev = undefined);\n  prev || (prev = {});\n  value || (value = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, props = {}, isSVG, skipChildren) {\n  const prevProps = {};\n  if (!skipChildren) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  createRenderEffect(() => typeof props.ref === \"function\" && use(props.ref, node));\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction use(fn, element, arg) {\n  return untrack(() => fn(element, arg));\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\") continue;\n      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef);\n  }\n}\nfunction hydrate$1(code, element, options = {}) {\n  if (globalThis._$HY.done) return render(code, element, [...element.childNodes], options);\n  sharedConfig.completed = globalThis._$HY.completed;\n  sharedConfig.events = globalThis._$HY.events;\n  sharedConfig.load = id => globalThis._$HY.r[id];\n  sharedConfig.has = id => id in globalThis._$HY.r;\n  sharedConfig.gather = root => gatherHydratable(element, root);\n  sharedConfig.registry = new Map();\n  sharedConfig.context = {\n    id: options.renderId || \"\",\n    count: 0\n  };\n  try {\n    gatherHydratable(element, options.renderId);\n    return render(code, element, [...element.childNodes], options);\n  } finally {\n    sharedConfig.context = null;\n  }\n}\nfunction getNextElement(template) {\n  let node,\n    key,\n    hydrating = isHydrating();\n  if (!hydrating || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template();\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMatch(el, nodeName) {\n  while (el && el.localName !== nodeName) el = el.nextSibling;\n  return el;\n}\nfunction getNextMarker(start) {\n  let end = start,\n    count = 0,\n    current = [];\n  if (isHydrating(start)) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"$\") count++;else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const {\n        completed,\n        events\n      } = sharedConfig;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        events.shift();\n        eventHandler(e);\n      }\n      if (sharedConfig.done) {\n        sharedConfig.events = _$HY.events = null;\n        sharedConfig.completed = _$HY.completed = null;\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction isHydrating(node) {\n  return !!sharedConfig.context && !sharedConfig.done && (!node || node.isConnected);\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++) node.classList.toggle(classNames[i], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef) {\n  let isCE, isProp, isChildProp, propAlias, forceProp;\n  if (prop === \"style\") return style(node, value, prev);\n  if (prop === \"classList\") return classList(node, value, prev);\n  if (value === prev) return prev;\n  if (prop === \"ref\") {\n    if (!skipRef) value(node);\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e = prop.slice(3);\n    prev && node.removeEventListener(e, prev);\n    value && node.addEventListener(e, value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e = prop.slice(10);\n    prev && node.removeEventListener(e, prev, true);\n    value && node.addEventListener(e, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if (prop.slice(0, 5) === \"attr:\") {\n    setAttribute(node, prop.slice(5), value);\n  } else if ((forceProp = prop.slice(0, 5) === \"prop:\") || (isChildProp = ChildProperties.has(prop)) || !isSVG && ((propAlias = getPropAlias(prop, node.tagName)) || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes(\"-\"))) {\n    if (forceProp) {\n      prop = prop.slice(5);\n      isProp = true;\n    } else if (isHydrating(node)) return value;\n    if (prop === \"class\" || prop === \"className\") className(node, value);else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;else node[propAlias || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns) setAttributeNS(node, ns, prop, value);else setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e) {\n  if (sharedConfig.registry && sharedConfig.events) {\n    if (sharedConfig.events.find(([el, ev]) => ev === e)) return;\n  }\n  const key = `$$${e.type}`;\n  let node = e.composedPath && e.composedPath()[0] || e.target;\n  if (e.target !== node) {\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) sharedConfig.done = _$HY.done = true;\n  while (node) {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler.call(node, data, e) : handler.call(node, e);\n      if (e.cancelBubble) return;\n    }\n    node = node._$host || node.parentNode || node.host;\n  }\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  const hydrating = isHydrating(parent);\n  if (hydrating) {\n    !current && (current = [...parent.childNodes]);\n    let cleaned = [];\n    for (let i = 0; i < current.length; i++) {\n      const node = current[i];\n      if (node.nodeType === 8 && node.data.slice(0, 2) === \"!$\") node.remove();else cleaned.push(node);\n    }\n    current = cleaned;\n  }\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n    multi = marker !== undefined;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (hydrating) return current;\n    if (t === \"number\") {\n      value = value.toString();\n      if (value === current) return current;\n    }\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data !== value && (node.data = value);\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (hydrating) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (hydrating) {\n      if (!array.length) return current;\n      if (marker === undefined) return current = [...parent.childNodes];\n      let node = array[0];\n      if (node.parentNode !== parent) return current;\n      const nodes = [node];\n      while ((node = node.nextSibling) !== marker) nodes.push(node);\n      return current = nodes;\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value.nodeType) {\n    if (hydrating && value.parentNode) return current = multi ? [value] : value;\n    if (Array.isArray(current)) {\n      if (multi) return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else ;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n      prev = current && current[normalized.length],\n      t;\n    if (item == null || item === true || item === false) ; else if ((t = typeof item) === \"object\" && item.nodeType) {\n      normalized.push(item);\n    } else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if (t === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item], Array.isArray(prev) ? prev : [prev]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) normalized.push(prev);else normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker = null) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);else isParent && el.remove();\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction gatherHydratable(element, root) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    const key = node.getAttribute(\"data-hk\");\n    if ((!root || key.startsWith(root)) && !sharedConfig.registry.has(key)) sharedConfig.registry.set(key, node);\n  }\n}\nfunction getHydrationKey() {\n  return sharedConfig.getNextContextId();\n}\nfunction NoHydration(props) {\n  return sharedConfig.context ? undefined : props.children;\n}\nfunction Hydration(props) {\n  return props.children;\n}\nconst voidFn = () => undefined;\nconst RequestContext = Symbol();\nfunction innerHTML(parent, content) {\n  !sharedConfig.context && (parent.innerHTML = content);\n}\n\nfunction throwInBrowser(func) {\n  const err = new Error(`${func.name} is not supported in the browser, returning undefined`);\n  console.error(err);\n}\nfunction renderToString(fn, options) {\n  throwInBrowser(renderToString);\n}\nfunction renderToStringAsync(fn, options) {\n  throwInBrowser(renderToStringAsync);\n}\nfunction renderToStream(fn, options) {\n  throwInBrowser(renderToStream);\n}\nfunction ssr(template, ...nodes) {}\nfunction ssrElement(name, props, children, needsId) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrAttribute(key, value) {}\nfunction ssrHydrationKey() {}\nfunction resolveSSRNode(node) {}\nfunction escape(html) {}\nfunction ssrSpread(props, isSVG, skipChildren) {}\n\nconst isServer = false;\nconst isDev = false;\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nconst hydrate = (...args) => {\n  enableHydration();\n  return hydrate$1(...args);\n};\nfunction Portal(props) {\n  const {\n      useShadow\n    } = props,\n    marker = document.createTextNode(\"\"),\n    mount = () => props.mount || document.body,\n    owner = getOwner();\n  let content;\n  let hydrating = !!sharedConfig.context;\n  createEffect(() => {\n    if (hydrating) getOwner().user = hydrating = false;\n    content || (content = runWithOwner(owner, () => createMemo(() => props.children)));\n    const el = mount();\n    if (el instanceof HTMLHeadElement) {\n      const [clean, setClean] = createSignal(false);\n      const cleanup = () => setClean(true);\n      createRoot(dispose => insert(el, () => !clean() ? content() : dispose(), null));\n      onCleanup(cleanup);\n    } else {\n      const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n        renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n          mode: \"open\"\n        }) : container;\n      Object.defineProperty(container, \"_$host\", {\n        get() {\n          return marker.parentNode;\n        },\n        configurable: true\n      });\n      insert(renderRoot, content);\n      el.appendChild(container);\n      props.ref && props.ref(container);\n      onCleanup(() => el.removeChild(container));\n    }\n  }, undefined, {\n    render: !hydrating\n  });\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p, others] = splitProps(props, [\"component\"]);\n  const cached = createMemo(() => p.component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\n\nexport { Aliases, voidFn as Assets, ChildProperties, DOMElements, DelegatedEvents, Dynamic, Hydration, voidFn as HydrationScript, NoHydration, Portal, Properties, RequestContext, SVGElements, SVGNamespace, addEventListener, assign, classList, className, clearDelegatedEvents, delegateEvents, dynamicProperty, escape, voidFn as generateHydrationScript, voidFn as getAssets, getHydrationKey, getNextElement, getNextMarker, getNextMatch, getPropAlias, voidFn as getRequestEvent, hydrate, innerHTML, insert, isDev, isServer, render, renderToStream, renderToString, renderToStringAsync, resolveSSRNode, runHydrationEvents, setAttribute, setAttributeNS, setProperty, spread, ssr, ssrAttribute, ssrClassList, ssrElement, ssrHydrationKey, ssrSpread, ssrStyle, style, template, use, voidFn as useAssets };\n"],"names":["Math","min","max","round","floor","createCoords","v","x","y","placement","split","includes","rect","width","height","top","left","right","bottom","computeCoordsFromPlacement","_ref","rtl","reference","floating","sideAxis","alignmentAxis","alignLength","side","isVertical","commonX","commonY","commonAlign","coords","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","getDocumentElement","document","documentElement","value","Node","isElement","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","element","overflow","overflowX","overflowY","display","getComputedStyle","test","isTableElement","isTopLayer","some","selector","matches","e","isContainingBlock","elementOrCss","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","filter","willChange","contain","CSS","supports","isLastTraversableNode","getNodeScroll","scrollLeft","scrollTop","scrollX","scrollY","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","getFrameElement","concat","visualViewport","parent","Object","getPrototypeOf","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","contextElement","getScale","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","offsetParent","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","strategy","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","isStaticPositioned","getTrueOffsetParent","polyfill","getOffsetParent","svgOffsetParent","currentNode","getContainingBlock","platform","convertOffsetParentRelativeRectToViewportRelativeRect","elements","topLayer","getClippingRect","boundary","rootBoundary","clippingAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","this","_c","firstClippingAncestor","clippingRect","reduce","accRect","getElementRects","async","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","Array","from","isRTL","autoUpdate","update","options","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","rects","statefulPlacement","middlewareData","resetCount","i","length","name","fn","nextX","nextY","reset","initialPlacement","computePosition","sharedConfig","context","undefined","registry","effects","done","getContextId","count","getNextContextId","num","String","len","id","fromCharCode","setHydrateContext","equalFn","a","b","$PROXY","Symbol","$TRACK","signalOptions","equals","ERROR","runEffects","runQueue","STALE","PENDING","UNOWNED","owned","cleanups","owner","NO_INIT","Owner","Transition","Scheduler","ExternalSourceConfig","Listener","Updates","Effects","ExecCount","createRoot","detachedOwner","listener","unowned","current","updateFn","untrack","cleanNode","runUpdates","createSignal","s","observers","observerSlots","comparator","assign","readSignal","bind","running","sources","has","tValue","writeSignal","createComputed","c","createComputation","push","updateComputation","createRenderEffect","createEffect","runUserEffects","SuspenseContext","useContext","suspense","render","user","createMemo","tState","createResource","pSource","pFetcher","pOptions","source","fetcher","arguments","pr","initP","loadedUnderTransition","scheduled","resolved","dynamic","contexts","Set","setValue","storage","initialValue","error","setError","track","trigger","state","setState","loadEnd","p","key","onHydrated","queueMicrotask","promises","delete","completeLoad","err","keys","decrement","clear","read","add","increment","load","refetching","lookup","status","castError","then","ssrLoadFrom","defineProperties","loading","latest","refetch","mutate","createSelector","subs","val","values","pure","l","onCleanup","size","batch","on","deps","isArray","prevInput","defer","prevValue","input","onMount","getListener","transPending","setTransPending","createContext","defaultValue","Provider","createProvider","children","memo","resolveChildren","toArray","getSuspenseContext","runningTransition","updates","lookUpstream","sSlot","sourceSlots","isComp","TransitionRunning","o","disposed","markDownstream","Error","time","runComputation","nextValue","tOwned","updatedAt","handleError","init","ordinary","factory","dispose","triggerInTransition","Promise","resolve","t","queue","res","startTransition","inTransition","runTop","inFallback","prev","wait","item","tasks","scheduleQueue","apply","d","completeUpdates","userLength","slice","ignore","pop","index","obs","n","cause","runErrors","fns","f","results","props","FALLBACK","hydrationEnabled","createComponent","Comp","r","trueFn","propTraps","_","property","receiver","deleteProperty","getOwnPropertyDescriptor","configurable","enumerable","ownKeys","resolveSource","resolveSources","mergeProps","proxy","Proxy","sourcesMap","defined","create","sourceKeys","getOwnPropertyNames","desc","definedKeys","defineProperty","splitProps","blocked","flat","map","k","otherObject","objects","propName","isDefaultDesc","writable","objectIndex","lazy","comp","wrap","ctx","mod","default","preload","counter","createUniqueId","narrowedError","For","fallback","mapFn","items","mapped","disposers","indexes","j","newItems","newLen","newIndices","newIndicesNext","temp","tempdisposers","tempIndexes","start","end","newEnd","disposer","mapper","mapArray","each","Show","keyed","condition","when","child","Switch","conditions","evalConditions","conds","cond","Match","SuspenseListContext","Suspense","show","flicker","setFallback","store","ref","gather","listContext","register","rendered","showContent","showFallback","Properties","ChildProperties","Aliases","className","htmlFor","PropAliases","class","formnovalidate","BUTTON","INPUT","ismap","IMG","nomodule","SCRIPT","playsinline","VIDEO","readonly","TEXTAREA","DelegatedEvents","SVGNamespace","xlink","xml","$$EVENTS","code","insert","firstChild","textContent","template","isCE","isSVG","createElement","innerHTML","content","importNode","cloneNode","setAttribute","isHydrating","removeAttribute","classList","classKeys","prevKeys","toggleClassKey","classValue","style","nodeStyle","cssText","removeProperty","setProperty","spread","skipChildren","prevProps","insertExpression","use","skipRef","prop","assignProp","arg","accessor","marker","initial","isConnected","classNames","trim","nameLen","toggle","isProp","isChildProp","propAlias","forceProp","delegate","h","handler","handlerFn","call","eventNames","eventHandler","delegateEvents","tagName","getPropAlias","replace","w","toUpperCase","ns","indexOf","namespace","removeAttributeNS","setAttributeNS","events","find","ev","type","composedPath","_$HY","disabled","cancelBubble","_$host","unwrapArray","hydrating","childNodes","cleaned","nodeType","remove","multi","toString","createTextNode","cleanChildren","array","currentArray","normalizeIncomingArray","nodes","nextSibling","appendNodes","bLength","aEnd","bEnd","aStart","bStart","after","insertBefore","sequence","replaceChild","reconcileArrays","appendChild","normalized","unwrap","replacement","inserted","isParent"],"sourceRoot":""}